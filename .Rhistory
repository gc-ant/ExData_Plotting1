source('F:/Coursera/Practical_Machine_Learning/week2/week2quiz.R')
source('F:/Coursera/Practical_Machine_Learning/week2/week2quiz.R')
source('F:/Coursera/Practical_Machine_Learning/week2/week2quiz.R')
training_IL
head(training_IL)
source('F:/Coursera/Practical_Machine_Learning/week2/week2quiz.R')
head(training_IL)
source('F:/Coursera/Practical_Machine_Learning/week2/week2quiz.R')
source('F:/Coursera/Practical_Machine_Learning/week2/week2quiz.R')
?predict
source('F:/Coursera/Practical_Machine_Learning/week2/week2quiz.R')
source('F:/Coursera/Practical_Machine_Learning/week2/week2quiz.R')
str(glm_predictions)
source('F:/Coursera/Practical_Machine_Learning/week2/week2quiz.R')
source('F:/Coursera/Practical_Machine_Learning/week2/week2quiz.R')
source('F:/Coursera/Practical_Machine_Learning/week2/week2quiz.R')
head(predictors_IL)
names(predictors_IL)
source('F:/Coursera/Practical_Machine_Learning/week2/week2quiz.R')
source('F:/Coursera/Practical_Machine_Learning/week2/week2quiz.R')
source('F:/Coursera/Practical_Machine_Learning/week2/week2quiz.R')
?startsWith
source('F:/Coursera/Practical_Machine_Learning/week2/week2quiz.R')
source('F:/Coursera/Practical_Machine_Learning/week2/week2quiz.R')
startsWith("IP","IL")
startsWith("IP_","IL")
startsWith("IP_","IL")
startsWith("IP_10_Inducible_Protein_10","IL")
head(predictors_IL)
colnames(predictors_IL)
colnames(predictors_IL)[10]
colnames(predictors_IL)[12]
startsWith(colnames(predictors_IL)[12],"IL")
startsWidth(colnames(predictors_IL),"IL")
startsWith(colnames(predictors_IL),"IL")
View(predictors)
View(predictors)
startsWith(colnames(predictors_IL),"IL")
source('F:/Coursera/Practical_Machine_Learning/week2/week2quiz.R')
source('F:/Coursera/Practical_Machine_Learning/week2/week2quiz.R')
source('F:/Coursera/Practical_Machine_Learning/week2/week2quiz.R')
source('F:/Coursera/Practical_Machine_Learning/week2/week2quiz.R')
source('F:/Coursera/Practical_Machine_Learning/week2/week2quiz.R')
source('F:/Coursera/Practical_Machine_Learning/week2/week2quiz.R')
source('F:/Coursera/Practical_Machine_Learning/week2/week2quiz.R')
source('F:/Coursera/Practical_Machine_Learning/week2/week2quiz.R')
source('F:/Coursera/Practical_Machine_Learning/week2/week2quiz.R')
source('F:/Coursera/Practical_Machine_Learning/week2/week2quiz.R')
source('F:/Coursera/Practical_Machine_Learning/week2/week2quiz.R')
source('F:/Coursera/Practical_Machine_Learning/week2/week2quiz.R')
source('F:/Coursera/Practical_Machine_Learning/week2/week2quiz.R')
head(adData_IL_train)
head(adData_IL_train)
source('F:/Coursera/Practical_Machine_Learning/week2/week2quiz.R')
head(training_IL_PC)
head(training_IL_PC)
source('F:/Coursera/Practical_Machine_Learning/week2/week2quiz.R')
dim(adData_IL_train_PC)
dim(ad_Data_IL_train_PC)
source('F:/Coursera/Practical_Machine_Learning/week2/week2quiz.R')
source('F:/Coursera/Practical_Machine_Learning/week2/week2quiz.R')
dim(adData_IL_train_PC)
dim(adData_IL_train_PC$diagnosis)
source('F:/Coursera/Practical_Machine_Learning/week2/week2quiz.R')
source('F:/Coursera/Practical_Machine_Learning/week2/week2quiz.R')
source('F:/Coursera/Practical_Machine_Learning/week2/week2quiz.R')
source('F:/Coursera/Practical_Machine_Learning/week2/week2quiz.R')
source('F:/Coursera/Practical_Machine_Learning/week2/week2quizQ3.R')
qplot(x=rowindex, y=CompressiveStrength, data=training)
qplot(x=rowindex, y=CompressiveStrength, data=training)
source('F:/Coursera/Practical_Machine_Learning/week2/week2quizQ3.R')
qplot(x=rowindex, y=CompressiveStrength, data=training)
source('F:/Coursera/Practical_Machine_Learning/week2/week2quizQ3.R')
source('F:/Coursera/Practical_Machine_Learning/week2/week2quizQ3.R')
qplot(x=rowindex, y=CompressiveStrength, data=training)
source('F:/Coursera/Practical_Machine_Learning/week2/week2quizQ3.R')
qplot(x=rowindex, y=CompressiveStrength, data=training)
ggplot(data = training, aes(x = index, y = CompressiveStrength)) + geom_point() +
theme_bw()
source('F:/Coursera/Practical_Machine_Learning/week2/week2quizQ3.R')
ggplot(data = training, aes(x = index, y = CompressiveStrength)) + geom_point() +
theme_bw()
source('F:/Coursera/Practical_Machine_Learning/week2/week2quizQ3.R')
ggplot(data = training, aes(x = index, y = CompressiveStrength)) + geom_point() +
theme_bw()
source('F:/Coursera/Practical_Machine_Learning/week2/week2quizQ3.R')
ggplot(data = training, aes(x = index, y = CompressiveStrength)) + geom_point() +
theme_bw()
View(training_IL_PC)
install.packages("pgmm", dependencies = TRUE)
source('F:/Coursera/Practical_Machine_Learning/week3/week3Q1.R')
head(segmentationOriginal)
str(segmentationOriginal)
head(segmentationOriginal$TotalIntenCh1)
head(segmentationOriginal$TotalIntenCh2)
head(segmentationOriginal$Case)
head(segmentationOriginal)
head(segmentationOriginal$Class)
source('F:/Coursera/Practical_Machine_Learning/week3/week3Q1.R')
source('F:/Coursera/Practical_Machine_Learning/week3/week3Q1.R')
source('F:/Coursera/Practical_Machine_Learning/week3/week3Q1.R')
source('F:/Coursera/Practical_Machine_Learning/week3/week3Q1.R')
install.packages("rattle", dependencies = TRUE)
source('F:/Coursera/Practical_Machine_Learning/week3/week3Q1.R')
library(pgmm)
data(olive)
head(olive)
range(olive$Region)
?t
?tree
source('F:/Coursera/Practical_Machine_Learning/week3/week3Q3.R')
?tree
source('F:/Coursera/Practical_Machine_Learning/week3/week3Q3.R')
head(olive$Area)
str(olive$Area)
range(olive$Area)
class(olive$Area)
View(olive)
source('F:/Coursera/Practical_Machine_Learning/week3/week3Q4.R')
install.packages("ElemStatLearn")
source('F:/Coursera/Practical_Machine_Learning/week3/week3Q4.R')
View(SAheart)
source('F:/Coursera/Practical_Machine_Learning/week3/week3Q4.R')
View(SAheart)
source('F:/Coursera/Practical_Machine_Learning/week3/week3Q4.R')
source('F:/Coursera/Practical_Machine_Learning/week3/week3Q4.R')
source('F:/Coursera/Practical_Machine_Learning/week3/week3Q4.R')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('F:/Coursera/Practical_Machine_Learning/week3/week3Q5.R')
head(vowel.train)
source('F:/Coursera/Practical_Machine_Learning/week3/week3Q5.R')
head(vowel.test)
str(vowel.test)
source('F:/Coursera/Practical_Machine_Learning/week3/week3Q5.R')
?varlmp
?varImp
varImp(rfModel)
source('F:/Coursera/Practical_Machine_Learning/week3/week3Q5.R')
varImp(rfModel)
source('F:/Coursera/Practical_Machine_Learning/week3/week3Q5.R')
source('F:/Coursera/Practical_Machine_Learning/week3/week3Q5.R')
source('F:/Coursera/Practical_Machine_Learning/week3/week3Q5.R')
source('~/.active-rstudio-document')
order(varImp(modelRf), decreasing=T)
varImp(modelRf)
?inv
source('F:/Coursera/R_Programming/code/ProgrammingAssignment2/cachematrix.R')
?matrix
?rand
?rnorm
?matrix
source('F:/Coursera/R_Programming/code/ProgrammingAssignment2/cachematrix.R')
randmatrix(nrow=3,ncol=4)
x<-randmatrix(nrow=3,ncol=4)
solve(x)
x<-randmatrix(nrow=3,ncol=3)
solve(x)
x*solve(x)
x%*%solve(x)
makeCacheMatrix(x)
makeCacheMatrix(x)
makeCacheMatrix(x)
makeCacheMatrix(x)
source('F:/Coursera/R_Programming/code/ProgrammingAssignment2/cachematrix.R')
source('F:/Coursera/R_Programming/code/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix(x)
source('F:/Coursera/R_Programming/code/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix(x)
cacheSolve(x)
mx<-makeCacheMatrix(x)
cacheSolve(x)
cacheSolve(mx)
cacheSolve(mx)
source('F:/Coursera/R_Programming/code/ProgrammingAssignment2/cachematrix.R')
cacheSolve(mx)
cacheSolve(mx)
x2 <- randmatrix(nrow=5,ncol=5)
mx2 <- makeCacheMatrix(x2)
solve(x2)
cacheSolve(mx2)
cacheSolve(mx2)
mx2$set(x1)
mx2$set(x)
cacheSolve(mx2)
cacheSolve(mx2)
?print
print
source('~/.active-rstudio-document')
x
cx <- makeCacheMatrix(x)
cacheSolve(x)
cacheSolve(cx)
cx$store()
cx$store()
source('~/.active-rstudio-document')
cx <- makeCacheMatrix(x)
cacheSolve(cx)
cacheSolve(cx)
swirl()
library(swirl)
siwrl()
swirl()
ls
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants,10)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6,4,replace = TRUE)
sample(1:6,4,replace = TRUE)
sample(1:20,10)
LETTERS
sample(LETTERS)
sample(c(0,1), replace = TRUE, prob=c(0.3,0.7))
sample(c(0,1), 100, replace = TRUE, prob=c(0.3,0.7))
sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips <- sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips
sum(flips)
?rbinom
rbinom(1,size=100, prob=0.7)
flips2 <- sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
rbinom(100,size=1, prob=0.7)
rbinom(n=100,size=1, prob=0.7)
flips2 <- rbinom(n=100, size=1, prob=0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(mean=100, sd=25, 10)
?rpois
rpois(n=5, size=1, mean=10)
rpois(10, size=1, mean=10)
rpois(10, mean=10)
rpois(10, lambda=10)
rpois(5, lambda=10)
replicate
my_pois <- replicate(100, rpois(5,10))
my_pois
colMeans((my_pois))
cm <- colMeans((my_pois))
cm <- colMeans(my_pois)
hist(cm)
data(cars)
?cars
head(cars)
View(cars)
View(cars)
View(cars)
plot(cars)
?plot
play()
rm(cars)
data(base:cars)
data(base::cars)
?cars
data(datasets:cars)
unloadNamespace(caret)
datasets::cars
cars <<- datasets::cars
cars <- datasets::cars
nxt()
plot(x=cars$speed, y=cars$dist)
plot(y=cars$speed, x=cars$dist)
plot(x=cars$speed, y=cars$dist)
plot(x=cars$speed, y=cars$dist, xlab="Speed")
plot(x=cars$speed, y=cars$dist, xlab="Speed", ylab="Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance", main="My Plot")
plot(cars, main = "My Plot")
play()
?plot
nxt()
plot(cars, main = "My Plot")
plot(cars, sub = "My Plot Subtitle")
?par
plot(cars, sub = "My Plot Subtitle")
plot(cars, col = 2)
plot(cars, xlim=c(10,15))
plot(cars, points=2)
plot(cars, pch=2)
data(mtcars)
boxplot()
?boxplot
boxplot(mpg~cyl, data=mtcars)
hist(mtcars$mpg)
q()
data(vowel.train)
library(ElemStatLearn)
data(vowel.train)
data("vowel.test")
vowel.test$y <- as.factor(vowel.test$y)
vowel.train$y <- as.facor(vowel.train$y)
vowel.train$y <- as.factor(vowel.train$y)
class(vowel.train)
class(vowel.train$y)
str(vowel.train$y)
str(vowel.test)
?predict
source('F:/Coursera/Practical_Machine_Learning/week4/week4q1.R')
source('F:/Coursera/Practical_Machine_Learning/week4/week4q1.R')
source('F:/Coursera/Practical_Machine_Learning/week4/week4q1.R')
source('F:/Coursera/Practical_Machine_Learning/week4/week4q1.R')
source('F:/Coursera/Practical_Machine_Learning/week4/week4q1.R')
source('F:/Coursera/Practical_Machine_Learning/week4/week4q1.R')
?confusionMatrix
confusionMatrix(rfPredict, vowel.test$y)
confusionMatrix(gbmPredict, vowel.test$y)
source('F:/Coursera/Practical_Machine_Learning/week4/week4q1.R')
confusionMatrix(gbmPredict, vowel.test$y)
confusionMatrix(gbmPredict, rfPredict)
?createDataPartition
source('F:/Coursera/Practical_Machine_Learning/week4/week4q2.R')
install.packages("gbm", dependencies = TRUE)
source('F:/Coursera/Practical_Machine_Learning/week4/week4q2.R')
traceback
traceback()
source('F:/Coursera/Practical_Machine_Learning/week4/week4q2.R')
head(testing)
head(predRF)
head(diagnosis)
str(predDframe)
str(testing)
?plot.enet
??plot.enet
install.packages(enet)
install.packages("enet", dependencies = T)
install.packages("elasticnet", dependencies = T)
?plot.enet
plot.enet
source('F:/Coursera/Practical_Machine_Learning/week4/week4q3.R')
?plot.enet
source('F:/Coursera/Practical_Machine_Learning/week4/week4q3.R')
q()
install_from_swirl("Exploratory Data Analysis")
library(swirl)
install_from_swirl("Exploratory Data Analysis")
swirl()
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile
quantile(ppm)
boxplot(ppm)
boxplot(ppm, col="blue")
abline(h=12)
hist(ppm)
hist(ppm, col=green)
hist(ppm, col="green")
rug(ppm)
low
high
hist(ppm, col="green", breaks=100)
rug(ppm)
hist(ppm, col="green")
abline(v=12)
abline(v=12, lwd=2)
abline(v=12, lwd=4, col="magenta")
abline(v = median(ppm), col = "magenta", lwd = 4)
names(pollution)
table(pollution$region)
reg=table(pollution$region)
reg <- table(pollution$region)
reg
barplot(reg, col="wheat", main="Number of Counties in Each Region")
boxplot(pm25~region, data=pollution)
boxplot(pm25~region, data=pollution, col="red")
par(mfrow=c(2,1),mar=c(4,4,2,1))
east <- subset(pollution, region=="east")
head(east)
hist(east$pm25, col="green")
hist(subset(pollution, region=="east"), col="green")
hist(subset(pollution, region=="east")$mp25, col="green")
hist(subset(pollution, region=="east")[pm25], col="green")
hist(subset(pollution, region=="east"), col="green")
hist(subset(pollution, region=="east")$pm25, col="green")
hist(subset(pollution,region=="west")$pm25, col = "green")
with(pollution, plot(latidude, pm25))
with(pollution, plot(latitude, pm25))
abline(h=12, lwd=2, lty=2)
plot(pollution$latitude, ppm, col=pollution$region)
abline(h=12, lwd=2, lty=2)
par(mfrow =
| c(1, 2), mar = c(5, 4, 2, 1))
par(mfrow = c(1, 2), mar = c(5, 4, 2, 1))
west <- subset(pollution, region=="west")
plot(west$latitude, west$pm25, main="West")
plot(east$latitude, east$pm25, main="East")
?Devices
with(faithful)
with(faithful, plot(eruptions, waiting))
title(main="Old Faithful Geyser data")
dev.cur()
play()
windows
windows()
windows()
dev.off
dev.off()
plot(c(1,2,3),c(2,4,5))
dev.cur()
nxt()
pdf(file="myplot.pdf")
with(faithful, plot(eruptions, waiting))
title(main="Old Faithful Geyser data")
play()
getwd()
dev.off()
nxt()
dev.cur()
dev.off()
dev.cur()
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.copy(png, file="geyserplot.png")
dev.off()
head(cars)
swirl
library(swirl)
swirl()
with(cars, plot(speed, dist))
text(mean(cars$speed, max(cars$dist), "SWIRL rules!"))
a
x<-10
text(mean(cars$speed),max(cars$dist),"SWIRL rules!")
head(state)
table(state$region)
xyplot(Life.Exp ~ Income | region, data=state, layout = c(4,1))
xyplot(Life.Exp ~ Income | region, data=state, layout = c(2,2))
head(mpg)
dim(mpg)
table(mpg$model)
qplot(displ, hwy, data=mpg)
head(airquality)
range(airquality$Ozone,  na.rm=TRUE)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone~Months, data=airquality)
boxplot(Ozone~Month, data=airquality)
boxplot(Ozone~Month, data=airquality, xlab="Month", ylab="Ozone (ppb)", col.axis = "blue", col.lab = "red")
title(main="Ozone and Wind in New York City")
with(airquality, plot(Wind, Ozone))
title(main="Ozone and Wind in New York City")
par(length)
length(par())
names(par())
par()$pin
par("fg")
par("pch")
par("lty")
plot(airquality$Wind, airquality$Ozone, type = "n")
title(main="Wind and Ozone in NYC")
may <- subset(airquality, months=5)
may <- subset(airquality, Month==5)
x<-10
points(may$Wind,may$Ozone,col="blue",pch=17)
notmay <- subset(airquality, Month!=5)
x<-10
points(notmay$Wind,notmay$Ozone,col="red",pch=8)
x<-10
legend("topright",pch=c(17,8),col=c("blue","red"),legend=c("May","Other Months"))
abline(v=median(airquality$Wind), lty=2)
abline(v=median(airquality$Wind), lty=2, lwd=2)
par(mfrow=c(1,2))
plot(airquality$Wind, airquality$Ozone, main="Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main="Ozone and Solar Radiation")
par(mfrow = c(1, 3), mar = c(4, 4, 2, 1), oma = c(0, 0, 2,0))
plot(airquality$Wind, airquality$Ozone, main="Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main="Ozone and Solar Radiation")
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation")
plot(airmiles$Temp, airquality$Ozone, main = "Ozone and Temperature")
plot(airquality$Temp, airquality$Ozone, main = "Ozone and Temperature")
mtext("Ozone and Weather in New York City")
mtext("Ozone and Weather in New York City", outer = TRUE)
source('C:/Goergi/Coursera/Exploratory_Data_Analysis/week1/ExData_Plotting1/plot3.R')
?points
source('C:/Goergi/Coursera/Exploratory_Data_Analysis/week1/ExData_Plotting1/plot3.R')
?legend
source('C:/Goergi/Coursera/Exploratory_Data_Analysis/week1/ExData_Plotting1/plot3.R')
source('C:/Goergi/Coursera/Exploratory_Data_Analysis/week1/ExData_Plotting1/plot3.R')
source('C:/Goergi/Coursera/Exploratory_Data_Analysis/week1/ExData_Plotting1/plot3.R')
source('C:/Goergi/Coursera/Exploratory_Data_Analysis/week1/ExData_Plotting1/plot3.R')
source('C:/Goergi/Coursera/Exploratory_Data_Analysis/week1/ExData_Plotting1/plot3.R')
source('C:/Goergi/Coursera/Exploratory_Data_Analysis/week1/ExData_Plotting1/plot3.R')
source('C:/Goergi/Coursera/Exploratory_Data_Analysis/week1/ExData_Plotting1/plot3.R')
str(powerdata)
source('C:/Goergi/Coursera/Exploratory_Data_Analysis/week1/ExData_Plotting1/plot4.R')
source('C:/Goergi/Coursera/Exploratory_Data_Analysis/week1/ExData_Plotting1/plot4.R')
source('C:/Goergi/Coursera/Exploratory_Data_Analysis/week1/ExData_Plotting1/plot4.R')
source('C:/Goergi/Coursera/Exploratory_Data_Analysis/week1/ExData_Plotting1/plot4.R')
source('C:/Goergi/Coursera/Exploratory_Data_Analysis/week1/ExData_Plotting1/plot4.R')
source('C:/Goergi/Coursera/Exploratory_Data_Analysis/week1/ExData_Plotting1/plot4.R')
source('C:/Goergi/Coursera/Exploratory_Data_Analysis/week1/ExData_Plotting1/plot4.R')
source('C:/Goergi/Coursera/Exploratory_Data_Analysis/week1/ExData_Plotting1/plot4.R')
source('C:/Goergi/Coursera/Exploratory_Data_Analysis/week1/ExData_Plotting1/plot4.R')
source('C:/Goergi/Coursera/Exploratory_Data_Analysis/week1/ExData_Plotting1/plot4.R')
source('C:/Goergi/Coursera/Exploratory_Data_Analysis/week1/ExData_Plotting1/plot1.R')
source('C:/Goergi/Coursera/Exploratory_Data_Analysis/week1/ExData_Plotting1/plot2.R')
source('C:/Goergi/Coursera/Exploratory_Data_Analysis/week1/ExData_Plotting1/plot3.R')
source('C:/Goergi/Coursera/Exploratory_Data_Analysis/week1/ExData_Plotting1/plot4.R')
